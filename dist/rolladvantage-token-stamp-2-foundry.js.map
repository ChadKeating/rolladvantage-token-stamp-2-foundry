{"version":3,"file":"rolladvantage-token-stamp-2-foundry.js","sources":["../src/index.js"],"sourcesContent":["const RollAdvantageTokenStamp2 = {\r\n\tgetSavePath: () => {\r\n\t\treturn game.settings.get(RollAdvantageTokenStamp2.moduleNamespace, RollAdvantageTokenStamp2.tokenPathSettingsKey);\r\n\t},\r\n\tcreateDirectory: async () => {\r\n\t\tlet savePath = RollAdvantageTokenStamp2.getSavePath();\r\n\t\tawait FilePicker.createDirectory(\"data\", savePath).catch(err => {\r\n\t\t\tif(err.indexOf(\"file already exists\") > 0)\r\n\t\t\t\treturn; //Do nothing if the file already exists\r\n\t\t\tconsole.error(err);\r\n\t\t\tthrow new Error(err);\r\n\t\t});\r\n\t},\r\n\t//https://stackoverflow.com/questions/50391422/detect-that-given-element-has-been-removed-from-the-dom-without-sacrificing-perf\r\n\tonRemoveHelper: (element, callback) => {\r\n\t\tconst parent = element.parentNode;\r\n\t\tif (!parent) throw new Error(\"The node must already be attached\");\r\n\r\n\t\tconst obs = new MutationObserver(mutations => {\r\n\t\t\tfor (const mutation of mutations) {\r\n\t\t\t\tfor (const el of mutation.removedNodes) {\r\n\t\t\t\t\tif (el === element) {\r\n\t\t\t\t\t\tobs.disconnect();\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tobs.observe(parent, {\r\n\t\t\tchildList: true,\r\n\t\t});\r\n\t},\r\n\trender: async (config, html) => {\r\n\t\tvar subHtml = html.find('.tab[data-tab=\"image\"]').find(\".form-group .form-fields\").first();\r\n\t\tsubHtml.append(\"<button type='button' id='ra-ts2-open-button' title='Create Token' tabindex='-1'><img src='https://rolladvantage.com/assets/images/logo/default.png' /></button>\");\r\n\t\tsubHtml.find(\"#ra-ts2-open-button\").click(event => {\r\n\r\n\t\t\tlet isStampOpen = Object.keys(ui.windows)\r\n\t\t\t\t.map(key => ui.windows[key])\r\n\t\t\t\t.some(win => win.options.classes.some(x => x == \"ra-ts2-wrapper\"));\r\n\r\n\t\t\tif(isStampOpen)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tevent.preventDefault()\r\n\t\t\tconst wrapper = new TokenStampWrapper();\r\n\t\t\twrapper.render(true);\r\n\t\t\twrapper.exportInputBox = html.find(\"input.image\");\r\n\r\n\t\t\tRollAdvantageTokenStamp2.onRemoveHelper(html[0], ()=>{\r\n\t\t\t\twrapper.close();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n};\r\nRollAdvantageTokenStamp2.moduleNamespace = \"rolladvantage-token-stamp-2-foundry\";\r\nRollAdvantageTokenStamp2.tokenPathSettingsKey = \"token-save-path\";\r\n\r\nclass TokenStampWrapper extends Application {\r\n\tstatic get defaultOptions() {\r\n\t\tconst options = super.defaultOptions;\r\n\t\toptions.template = \"/modules/rolladvantage-token-stamp-2-foundry/templates/wrapper-template.html\";\r\n\t\toptions.resizable = false;\r\n\t\toptions.width = 841;\r\n\t\toptions.height = 678;\r\n\t\toptions.classes = [\"ra-ts2-wrapper\"];\r\n\t\toptions.title = \"Token Stamp 2 - RollAdvantage.com\";\r\n\t\treturn options;\r\n\t}\r\n\r\n\tstatic createTokenFile(data, filename) {\r\n\t\tlet blobBin = atob(data.split(',')[1]);\r\n\t\tlet array = [];\r\n\t\tfor (let i = 0; i < blobBin.length; i++) {\r\n\t\t\tarray.push(blobBin.charCodeAt(i));\r\n\t\t}\r\n\t\tlet fileBlob = new Blob([new Uint8Array(array)], { type: 'image/png' });\r\n\t\treturn new File([fileBlob], filename);\r\n\t}\r\n\r\n\tstatic async uploadToken(data, filename) {\r\n\t\tlet file = TokenStampWrapper.createTokenFile(data, filename);\r\n\t\tlet uploadResponse = await FilePicker.upload(\"data\", RollAdvantageTokenStamp2.getSavePath(), file, {});\r\n\t\treturn uploadResponse;\r\n\t}\r\n\r\n\tasync close() {\r\n\t\twindow.removeEventListener(\"message\", this.boundCallback, false);\r\n\t\treturn super.close();\r\n\t}\r\n\r\n\tfoundryImportCallback(event) {\r\n\t\tif (event.origin != \"https://rolladvantage.com\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(event.data.action == \"sourceRegistered\") {\r\n\t\t\tTokenStampWrapper.sourceRegistered = true;\r\n\r\n\t\t}\r\n\r\n\t\tif (event.data.action == \"importToken\") {\r\n\t\t\tlet that = this;\r\n\t\t\tlet tokenName = event.data.tokenName + \"-\" + Date.now().toString(36).slice(-6) + \".png\";\r\n\t\t\tlet prom = TokenStampWrapper.uploadToken(event.data.stampData, tokenName);\r\n\t\t\tprom\r\n\t\t\t.then(x => {\r\n\t\t\t\tthat.exportInputBox[0].value = x.path;\r\n\t\t\t\tthat.close();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (event.data.action == \"importTokenUrl\") {\r\n\t\t\tlet that = this;\r\n\t\t\tthat.exportInputBox[0].value = event.data.tokenUrl;\r\n\t\t\tthat.close();\r\n\t\t}\r\n\t}\r\n\r\n\tactivateListeners(html) {\r\n\t\tsuper.activateListeners(html);\r\n\t\tlet that = this;\r\n\r\n\t\tthis.boundCallback = this.foundryImportCallback.bind(this);\r\n\t\twindow.addEventListener(\"message\", this.boundCallback, false);\r\n\r\n\t\tTokenStampWrapper.sourceRegistered = false;\r\n\t\tlet iWindow = document.getElementById('ra-ts2-iframe').contentWindow;\r\n\t\tfunction waitForTokenStampLoaded() {\r\n\t\t\tif(TokenStampWrapper.sourceRegistered) {\r\n\t\t\t\tconsole.log(\"Token Stamp Connected - Source Registered\");\r\n\t\t\t\tlet fp = new FilePicker();\r\n\t\t\t\tiWindow.postMessage({\r\n\t\t\t\t\taction: \"uploadPermission\",\r\n\t\t\t\t\tuploadPermission: fp.canUpload\r\n\t\t\t\t}, \"*\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tiWindow.postMessage({\r\n\t\t\t\taction: \"registerSource\"\r\n\t\t\t}, \"*\");\r\n\r\n\t\t\tif(that._element.length > 0) {\r\n\t\t\t\tconsole.log(\"Waiting for TS\");\r\n\t\t\t\tsetTimeout(waitForTokenStampLoaded, 500);\r\n\t\t\t}\r\n\t\t}\r\n\t\twaitForTokenStampLoaded();\r\n\t}\r\n}\r\n\r\nHooks.on('ready', () => {\r\n\r\n\tgame.settings.register(RollAdvantageTokenStamp2.moduleNamespace, RollAdvantageTokenStamp2.tokenPathSettingsKey, {\r\n\t\tname: \"Token Stamp 2 Save Path\",\r\n\t\thint: \"The path tokens are saved to when imported to Foundry.\",\r\n\t\tscope: \"world\",\r\n\t\tconfig: true,\r\n\t\ttype: String,\r\n\t\tdefault: \"worlds/\" + game.world.name + \"/rolladvantage\",\r\n\t\tonChange: value => RollAdvantageTokenStamp2.createDirectory()\r\n\t});\r\n\r\n\tHooks.on(\"renderTokenConfig\", RollAdvantageTokenStamp2.render);\r\n\tRollAdvantageTokenStamp2.createDirectory();\r\n});"],"names":["RollAdvantageTokenStamp2","getSavePath","game","settings","get","moduleNamespace","tokenPathSettingsKey","createDirectory","async","savePath","FilePicker","catch","err","indexOf","console","error","Error","onRemoveHelper","element","callback","parent","parentNode","obs","MutationObserver","mutations","mutation","el","removedNodes","disconnect","observe","childList","render","config","html","subHtml","find","first","append","click","event","Object","keys","ui","windows","map","key","some","win","options","classes","x","preventDefault","wrapper","TokenStampWrapper","exportInputBox","close","Application","defaultOptions","super","template","resizable","width","height","title","[object Object]","data","filename","blobBin","atob","split","array","i","length","push","charCodeAt","fileBlob","Blob","Uint8Array","type","File","file","createTokenFile","upload","window","removeEventListener","this","boundCallback","origin","action","sourceRegistered","that","tokenName","Date","now","toString","slice","uploadToken","stampData","then","value","path","tokenUrl","activateListeners","foundryImportCallback","bind","addEventListener","iWindow","document","getElementById","contentWindow","waitForTokenStampLoaded","log","fp","postMessage","uploadPermission","canUpload","_element","setTimeout","Hooks","on","register","name","hint","scope","String","default","world","onChange"],"mappings":"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"}